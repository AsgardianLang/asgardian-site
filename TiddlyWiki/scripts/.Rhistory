new.lower
new.root %>%
stri_trans_totitle %>%
sprintf("[[%s|%s]]", ., new.root) ->
new.upper
pb <- txtProgressBar(max=length(file.names), width=50, style=3)
for (i in 1:length(file.names)) {
f <- file.names[i]
cat(sprintf("Reading %s...\n", f))
temp <- readLines(f)
temp %<>% gsub(old.lower, new.lower, ., fixed=T)
temp %<>% gsub(old.upper, new.upper, ., fixed=T)
writeLines(temp, f)
setTxtProgressBar(pb, i)
}
close(pb)
}
replace.root.all <- function(old.root, new.root) {
# Define tiddler path.
tiddler.path <- "../tiddlers/"
# Get list of all .tid files
tid.files <- list.files(
path = tiddler.path,
pattern = "*.tid")
# Throw out shadow tiddlers and other stuff.
# Basically, only operate on tiddlers whose first character is alphabetic.
tid.files %>%
substring(1, 1) %>%
outer(c(letters, LETTERS), FUN = `%in%`) %>%
apply(1, any) -> keep
tid.files <- tid.files[keep]
tid.files
# Add in the path.
tid.files %<>%
paste0(tiddler.path, .)
# Now replace the root in each selected tiddler file.
replace.root(old.root, new.root, tid.files)
}
replace.root.all("mi", "i")
warnings()
old.root <- "u"
new.root <- "su"
f <- "../tiddlers/Introductions.tid"
# Construct all possible wiki link forms for the old root.
old.root %<>%
tolower()
old.root %>%
sprintf("[[%s]]", .) ->
old.lower
old.root %>%
stri_trans_totitle %>%
sprintf("[[%s|%s]]", ., old.root) ->
old.upper
old.lower
old.upper
new.lower
new.root %<>%
tolower()
new.root %>%
sprintf("[[%s]]", .) ->
new.lower
new.root %>%
stri_trans_totitle %>%
sprintf("[[%s|%s]]", ., new.root) ->
new.upper
new.lower
new.upper
temp <- readLines(f)
temp
temp %<>% gsub(old.lower, new.lower, ., fixed=T)
temp %<>% gsub(old.upper, new.upper, ., fixed=T)
temp
?writeLines
temp
writeLines(temp, f)
### Load dependencies ##########################################################
library(magrittr)
library(stringi)
### Define main function #######################################################
replace.root <- function(old.root, new.root, file.names) {
# Construct all possible wiki link forms for the old root.
old.root %<>%
tolower()
old.root %>%
sprintf("[[%s]]", .) ->
old.lower
old.root %>%
stri_trans_totitle %>%
sprintf("[[%s|%s]]", ., old.root) ->
old.upper
# Construct all possible wiki link forms for the new root.
new.root %<>%
tolower()
new.root %>%
sprintf("[[%s]]", .) ->
new.lower
new.root %>%
stri_trans_totitle %>%
sprintf("[[%s|%s]]", ., new.root) ->
new.upper
pb <- txtProgressBar(max=length(file.names), width=50, style=3)
for (i in 1:length(file.names)) {
f <- file.names[i]
cat(sprintf("Reading %s...\n", f))
temp <- readLines(f)
temp %<>% gsub(old.lower, new.lower, ., fixed=T)
temp %<>% gsub(old.upper, new.upper, ., fixed=T)
writeLines(temp, f)
setTxtProgressBar(pb, i)
}
close(pb)
}
replace.root.all <- function(old.root, new.root) {
# Define tiddler path.
tiddler.path <- "../tiddlers/"
# Get list of all .tid files
tid.files <- list.files(
path = tiddler.path,
pattern = "*.tid")
# Throw out shadow tiddlers and other stuff.
# Basically, only operate on tiddlers whose first character is alphabetic.
tid.files %>%
substring(1, 1) %>%
outer(c(letters, LETTERS), FUN = `%in%`) %>%
apply(1, any) -> keep
tid.files <- tid.files[keep]
tid.files
# Add in the path.
tid.files %<>%
paste0(tiddler.path, .)
# Now replace the root in each selected tiddler file.
replace.root(old.root, new.root, tid.files)
}
replace.root.all("u", "su")
source('E:/Conlangs/Asgardian/TiddlyWiki/scripts/replace_root.r')
source('E:/Conlangs/Asgardian/TiddlyWiki/scripts/generate_lexicon.r')
rm(keep)
tid.files
# Append path back on.
tid.files %<>% paste0(tiddler.path, .)
tid.files
# For each file, pull all the bullet-pointed definitions and join with |.
n.files <- length(tid.files)
results <- rep("", length(n.files))
results <- rep(NA, length(n.files))
results
results <- rep(NA, n.files)
f <- tid.files[12]
f
temp <- readLines(f)
temp
temp %>% substr(1, 1)
temp %>% substr(1, 1) %>% `==`('*')
temp %>% substr(1, 1) %>% `==`('*') -> keep.lines
temp[keep.lines]
# For each file, pull all the bullet-pointed definitions and join with |.
index.in <- function(ind, x) { x[ind] }
temp <- readLines(f)
temp %>%
substr(1, 1) %>%
`==`("*") %>%
index.in(temp)
temp %>%
substr(1, 1) %>%
`==`("*") %>%
index.in(temp) %>%
gsub("*", "", ., fixed=T) %>%
stri_trim_both
temp %>%
substr(1, 1) %>%
`==`("*") %>%
index.in(temp) %>%
gsub("*", "", ., fixed=T) %>%
stri_trim_both %>%
paste(collapse=" | ")
temp %>%
substr(1, 1) %>%
`==`("*") %>%
index.in(temp) %>%
gsub("*", "", ., fixed=T) %>%
stri_trim_both %>%
paste(collapse=" / ")
temp %>%
substr(1, 1) %>%
`==`("*") %>%
index.in(temp) %>%
gsub("*", "", ., fixed=T) %>%
stri_trim_both %>%
paste(collapse=" | ")
custom.pull(tid.files[1])
source('E:/Conlangs/Asgardian/TiddlyWiki/scripts/generate_lexicon.r')
custom.pull(tid.files[1])
custom.pull(tid.files[2])
custom.pull(tid.files[3])
custom.pull(tid.files[4])
### Load dependencies ##########################################################
library(magrittr)
library(stringi)
### Read in all Asgardian word tiddlers ########################################
# Define tiddler path.
tiddler.path <- "../tiddlers/"
# Get list of all .tid files
tid.files <- list.files(
path = tiddler.path,
pattern = "*.tid")
# Throw out shadow tiddlers and other stuff.
# Basically, only operate on tiddlers whose first character is a lower-case
# letter.
tid.files %>%
substring(1, 1) %>%
outer(c(letters), FUN = `%in%`) %>%
apply(1, any) -> keep
tid.files <- tid.files[keep]
tid.files
rm(keep)
# Convert filenames to list of Asgardian words
tid.files
tid.files %>%
gsub(".tid", "", ., fixed=T) ->
Asgardian
Asgardian
### Load dependencies ##########################################################
library(magrittr)
library(stringi)
### Read in all Asgardian word tiddlers ########################################
# Define tiddler path.
tiddler.path <- "../tiddlers/"
# Get list of all .tid files
tid.files <- list.files(
path = tiddler.path,
pattern = "*.tid")
# Throw out shadow tiddlers and other stuff.
# Basically, only operate on tiddlers whose first character is a lower-case
# letter.
tid.files %>%
substring(1, 1) %>%
outer(c(letters), FUN = `%in%`) %>%
apply(1, any) -> keep
tid.files <- tid.files[keep]
tid.files
rm(keep)
# Convert filenames to list of Asgardian words
tid.files %>%
gsub(".tid", "", ., fixed=T) ->
Asgardian
# Append path back on.
tid.files %<>% paste0(tiddler.path, .)
### Load dependencies ##########################################################
library(magrittr)
library(stringi)
### Read in all Asgardian word tiddlers ########################################
# Define tiddler path.
tiddler.path <- "../tiddlers/"
# Get list of all .tid files
tid.files <- list.files(
path = tiddler.path,
pattern = "*.tid")
# Throw out shadow tiddlers and other stuff.
# Basically, only operate on tiddlers whose first character is a lower-case
# letter.
tid.files %>%
substring(1, 1) %>%
outer(c(letters), FUN = `%in%`) %>%
apply(1, any) -> keep
tid.files <- tid.files[keep]
tid.files
rm(keep)
# Convert filenames to list of Asgardian words
tid.files %>%
gsub(".tid", "", ., fixed=T) ->
Asgardian
# Append path back on.
tid.files %<>% paste0(tiddler.path, .)
### Load dependencies ##########################################################
library(magrittr)
library(stringi)
### Read in all Asgardian word tiddlers ########################################
# Define tiddler path.
tiddler.path <- "../tiddlers/"
# Get list of all .tid files
tid.files <- list.files(
path = tiddler.path,
pattern = "*.tid")
# Throw out shadow tiddlers and other stuff.
# Basically, only operate on tiddlers whose first character is a lower-case
# letter.
tid.files %>%
substring(1, 1) %>%
outer(c(letters), FUN = `%in%`) %>%
apply(1, any) -> keep
tid.files <- tid.files[keep]
tid.files
rm(keep)
# Convert filenames to list of Asgardian words
tid.files %>%
gsub(".tid", "", ., fixed=T) ->
Asgardian
# Append path back on.
tid.files %<>% paste0(tiddler.path, .)
# For each file, pull all the bullet-pointed definitions and join with |.
index.in <- function(ind, x) { x[ind] }
custom.pull <- function(f) {
temp <- readLines(f)
temp %>%
substr(1, 1) %>%
`==`("*") %>%
index.in(temp) %>%
gsub("*", "", ., fixed=T) %>%
stri_trim_both %>%
paste(collapse=" | ") ->
def
return(def)
}
tid.files %>% sapply(custom.pull) -> English
English
tid.files %>% sapply(custom.pull) %>% as.character -> English
English
source('E:/Conlangs/Asgardian/TiddlyWiki/scripts/generate_lexicon.r')
View(result)
# Get current date / time
Sys.Date()
# Get current date / time
as.character(Sys.Date())
Sys.time()
?Sys.time
Sys.time() %>% strptime("yy")
Sys.time() %>% strptime("y")
Sys.time() %>% strptime("Y")
Sys.time() %>% strptime("YYYY")
Sys.time() %>% format("YYYY")
Sys.time() %>% format("%Y")
Sys.time() %>% format("%Y-%M")
Sys.time() %>% format("%Y-%m")
Sys.time() %>% format("%Y-%m-%d")
Sys.time() %>% format("%Y-%m-%d %h")
Sys.time() %>% format("%Y-%m-%d %H")
Sys.time() %>% format("%Y-%m-%d %H_%M")
Sys.time() %>% format("%Y %m%d %H%M")
Sys.time() %>% format("%Y %m %d %H%M")
Sys.time() %>% format("%Y_%m_%d_%H%M")
Sys.time() %>%
format("Lexicon (%Y_%m_%d_%H%M).csv")
source('E:/Conlangs/Asgardian/TiddlyWiki/scripts/generate_lexicon.r')
source('E:/Conlangs/Asgardian/TiddlyWiki/scripts/generate_lexicon.r')
old.root <- "nima"
new.root <- "xyz"
# Define tiddler path.
tiddler.path <- "../tiddlers/"
# Get list of all .tid files
tid.files <- list.files(
path = tiddler.path,
pattern = "*.tid")
# Throw out shadow tiddlers and other stuff.
# Basically, only operate on tiddlers whose first character is alphabetic.
tid.files %>%
substring(1, 1) %>%
outer(c(letters, LETTERS), FUN = `%in%`) %>%
apply(1, any) -> keep
tid.files <- tid.files[keep]
tid.files
# Add in the path.
tid.files %<>%
paste0(tiddler.path, .)
### Load dependencies ##########################################################
library(magrittr)
library(stringi)
replace.root <- function(old.root, new.root, file.names) {
# Construct all possible wiki link forms for the old root.
old.root %<>%
tolower()
old.root %>%
sprintf("[[%s]]", .) ->
old.lower
old.root %>%
stri_trans_totitle %>%
sprintf("[[%s|%s]]", ., old.root) ->
old.upper
# Construct all possible wiki link forms for the new root.
new.root %<>%
tolower()
new.root %>%
sprintf("[[%s]]", .) ->
new.lower
new.root %>%
stri_trans_totitle %>%
sprintf("[[%s|%s]]", ., new.root) ->
new.upper
n.files <- length(file.names)
for (i in 1:n.files) {
f <- file.names[i]
cat(sprintf("(%03d/%03d) Reading %s...\n", i, n.files, f))
temp <- readLines(f)
temp %<>% gsub(old.lower, new.lower, ., fixed=T)
temp %<>% gsub(old.upper, new.upper, ., fixed=T)
writeLines(temp, f)
}
}
# Define tiddler path.
tiddler.path <- "../tiddlers/"
# Get list of all .tid files
tid.files <- list.files(
path = tiddler.path,
pattern = "*.tid")
# Throw out shadow tiddlers and other stuff.
# Basically, only operate on tiddlers whose first character is alphabetic.
tid.files %>%
substring(1, 1) %>%
outer(c(letters, LETTERS), FUN = `%in%`) %>%
apply(1, any) -> keep
tid.files <- tid.files[keep]
tid.files
# Add in the path.
tid.files %<>%
paste0(tiddler.path, .)
# Finally update the actual tiddler file.
old.root %>%
tolower %>%
paste0(tiddler.path, ., ".tid") -> old.file
new.root %>%
tolower %>%
paste0(tiddler.path, ., ".tid") -> new.file
old.file
new.file
old.file %>%
readLines()
# Now replace the root in each selected tiddler file.
replace.root(old.root, new.root, tid.files)
old.file %>%
readLines()
old.file %>%
readLines() -> old.lines
old.lines[3]
old.lines[3] <- sprintf("title: %s", new.root)
old.lines
old.lines %>%
writeLines(new.file)
?unlink
unlink(old.file)
replace.root.all("xyz", "nima")
### Load dependencies ##########################################################
library(magrittr)
library(stringi)
### Define main function #######################################################
replace.root <- function(old.root, new.root, file.names) {
# Construct all possible wiki link forms for the old root.
old.root %<>%
tolower()
old.root %>%
sprintf("[[%s]]", .) ->
old.lower
old.root %>%
stri_trans_totitle %>%
sprintf("[[%s|%s]]", ., old.root) ->
old.upper
# Construct all possible wiki link forms for the new root.
new.root %<>%
tolower()
new.root %>%
sprintf("[[%s]]", .) ->
new.lower
new.root %>%
stri_trans_totitle %>%
sprintf("[[%s|%s]]", ., new.root) ->
new.upper
n.files <- length(file.names)
for (i in 1:n.files) {
f <- file.names[i]
cat(sprintf("(%03d/%03d) Reading %s...\n", i, n.files, f))
temp <- readLines(f)
temp %<>% gsub(old.lower, new.lower, ., fixed=T)
temp %<>% gsub(old.upper, new.upper, ., fixed=T)
writeLines(temp, f)
}
}
replace.root.all <- function(old.root, new.root) {
# Define tiddler path.
tiddler.path <- "../tiddlers/"
# Get list of all .tid files
tid.files <- list.files(
path = tiddler.path,
pattern = "*.tid")
# Throw out shadow tiddlers and other stuff.
# Basically, only operate on tiddlers whose first character is alphabetic.
tid.files %>%
substring(1, 1) %>%
outer(c(letters, LETTERS), FUN = `%in%`) %>%
apply(1, any) -> keep
tid.files <- tid.files[keep]
tid.files
# Add in the path.
tid.files %<>%
paste0(tiddler.path, .)
# Now replace the root in each selected tiddler file.
replace.root(old.root, new.root, tid.files)
# Finally update the actual tiddler file.
old.root %>%
tolower %>%
paste0(tiddler.path, ., ".tid") -> old.file
new.root %>%
tolower %>%
paste0(tiddler.path, ., ".tid") -> new.file
# old.file %>%
#   readLines() -> old.lines
# old.lines[3] <- sprintf("title: %s", new.root)
# old.lines %>%
#   writeLines(new.file)
# unlink(old.file)
}
replace.root.all("xyz", "nima")
source('E:/Conlangs/Asgardian/TiddlyWiki/scripts/replace_root.r')
swap.roots("tota", "su")
swap.roots("sapa", "ta")
